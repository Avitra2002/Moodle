<?php
require_once('../../config.php');
require_login();
require_capability('moodle/site:config', context_system::instance());

$PAGE->set_url(new moodle_url('/local/customdashboard/index.php'));
$PAGE->set_context(context_system::instance());
$PAGE->set_title('Admin Dashboard');
$PAGE->set_heading('Custom Admin Dashboard');
$PAGE->set_pagelayout('admin');

echo $OUTPUT->header();

global $DB, $CFG;

// üßÆ Summary Counts
$totalstudents = $DB->count_records_sql("
    SELECT COUNT(DISTINCT u.id)
    FROM {user} u
    JOIN {role_assignments} ra ON ra.userid = u.id
    JOIN {role} r ON r.id = ra.roleid
    WHERE r.shortname = 'Employee' AND u.deleted = 0
");

$totalteachers = $DB->count_records_sql("
    SELECT COUNT(DISTINCT u.id)
    FROM {user} u
    JOIN {role_assignments} ra ON ra.userid = u.id
    JOIN {role} r ON r.id = ra.roleid
    WHERE r.shortname IN ('Supervisor', 'Supervisor') AND u.deleted = 0
");

$totalcourses = $DB->count_records('course') - 1;

// üéì Certification courses (change these IDs!)
$certification_course_ids = [5, 8, 12];
$certified_users = [];

foreach ($certification_course_ids as $cert_course_id) {
    $course = get_course($cert_course_id);
    $context = context_course::instance($cert_course_id);
    $students = get_enrolled_users($context, 'moodle/course:view', 0, 'u.id');

    foreach ($students as $student) {
        $progress = \core_completion\progress::get_course_progress_percentage($course, $student->id);
        if ($progress === 100) {
            $certified_users[$student->id] = true;
        }
    }
}

$total_certified = count($certified_users);

// üìä Course-wise Stats
$courses = $DB->get_records_sql("SELECT id, fullname FROM {course} WHERE id != 1");

$labels = [];
$enrolled_data = [];
$completed_data = [];
$inprogress_data = [];

foreach ($courses as $course) {
    $context = context_course::instance($course->id);
    $students = get_enrolled_users($context, '', 0);

    $total = count($students);
    $completed = 0;
    $inprogress = 0;

    foreach ($students as $student) {
        $progress = \core_completion\progress::get_course_progress_percentage($course, $student->id);
        if ($progress === 100) {
            $completed++;
        } else {
            $inprogress++;
        }
    }

    $labels[] = $course->fullname;
    $enrolled_data[] = $total;
    $completed_data[] = $completed;
    $inprogress_data[] = $inprogress;
}
?>

<!-- üé® STYLES -->
<style>
.dashboard-tiles {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    margin-bottom: 30px;
}
.tile {
    flex: 1;
    color: white;
    padding: 20px;
    border-radius: 10px;
    font-size: 1.2em;
    text-align: center;
    min-width: 200px;
}
.tile-students  { background-color: #007bff; }
.tile-teachers  { background-color: #28a745; }
.tile-courses   { background-color: #6f42c1; }
.tile-certified { background-color: #17a2b8; }

.graph-row {
    display: flex;
    flex-wrap: wrap;
    gap: 30px;
}
.graph-row .graph {
    flex: 1 1 calc(50% - 30px);
}

ul.due-list {
    margin-top: 40px;
    padding-left: 20px;
}
ul.due-list li {
    margin-bottom: 10px;
}
ul.due-list span {
    color: #cc0000;
}
</style>

<!-- üî¢ SUMMARY TILES -->
<div class="dashboard-tiles">
    <div class="tile tile-students">
        üë®‚Äçüéì <h2><?= $totalstudents ?></h2><p>Total Employee</p>
    </div>
    <div class="tile tile-teachers">
        üë©‚Äçüè´ <h2><?= $totalteachers ?></h2><p>Total Supervisor</p>
    </div>
    <div class="tile tile-courses">
        üìö <h2><?= $totalcourses ?></h2><p>Total Courses</p>
    </div>
    <div class="tile tile-certified">
        üéì <h2><?= $total_certified ?></h2><p>Total Certified</p>
    </div>
</div>

<!-- üìä GRAPHS -->
<div class="graph-row">
    <div class="graph">
        <canvas id="enrollmentChart"></canvas>
    </div>
    <div class="graph">
        <canvas id="statusChart"></canvas>
    </div>
</div>

<!-- üìà CHARTS SCRIPT -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
const labels = <?= json_encode($labels) ?>;
const enrolled = <?= json_encode($enrolled_data) ?>;
const completed = <?= json_encode($completed_data) ?>;
const inProgress = <?= json_encode($inprogress_data) ?>;

// Enrollments
new Chart(document.getElementById('enrollmentChart'), {
    type: 'bar',
    data: {
        labels: labels,
        datasets: [{
            label: 'Enrolled Students',
            data: enrolled,
            backgroundColor: 'rgba(54, 162, 235, 0.6)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1
        }]
    },
    options: {
        responsive: true,
        plugins: {
            title: { display: true, text: 'Enrollment per Course' }
        },
        scales: {
            y: { beginAtZero: true, ticks: { stepSize: 1 } }
        }
    }
});

// Completion Status
new Chart(document.getElementById('statusChart'), {
    type: 'bar',
    data: {
        labels: labels,
        datasets: [
           {
                label: 'Completed',
                data: completed,
                backgroundColor: 'rgba(75, 192, 192, 0.6)'
            },
            {
                label: 'In Progress',
                data: inProgress,
                backgroundColor: 'rgba(255, 205, 86, 0.6)'
            }
        ]
    },
    options: {
        responsive: true,
        plugins: {
            title: { display: true, text: 'Completion Status per Course' }
        },
        scales: {
            y: { beginAtZero: true, ticks: { stepSize: 1 } }
        }
    }
});
</script>



<?php
$modules = ['assign' => 'duedate', 'quiz' => 'timeclose', 'forum' => 'duedate'];
$upcoming = [];

foreach ($modules as $modname => $timeduefield) {
    $modtable = $DB->get_prefix() . $modname;

    if (!$DB->get_manager()->table_exists($modname)) continue;

    $sql = "
        SELECT 
            cm.id AS cmid,
            c.id AS courseid,
            c.fullname AS coursename,
            m.name AS modname,
            m.$timeduefield AS duetime,
            :mod1 AS modtype
        FROM {$modtable} m
        JOIN {course_modules} cm ON cm.instance = m.id
        JOIN {modules} md ON md.id = cm.module AND md.name = :mod
        JOIN {course} c ON c.id = cm.course
        WHERE m.$timeduefield IS NOT NULL 
          AND m.$timeduefield > :now 
          AND cm.visible = 1 
          AND c.visible = 1
    ";

    $params = [
        'mod' => $modname,
        'mod1' => $modname,
        'now' => time()
    ];

    $records = $DB->get_records_sql($sql, $params);

    foreach ($records as $rec) {
        $upcoming[] = (object)[
            'courseid'   => $rec->courseid,
            'coursename' => $rec->coursename,
            'modname'    => $rec->modname,
            'modtype'    => $rec->modtype,
            'duetime'    => $rec->duetime,
            'cmid'       => $rec->cmid
        ];
    }
}

usort($upcoming, fn($a, $b) => $a->duetime - $b->duetime);
$upcoming = array_slice($upcoming, 0, 5);
?>

<!-- üé® Styling -->
<style>
.upcoming-due-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 30px;
    box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    border-radius: 10px;
    overflow: hidden;
}
.upcoming-due-table th {
    background-color: #007bff;
    color: #fff;
    padding: 12px;
    text-align: left;
}
.upcoming-due-table td {
    padding: 12px;
    border-bottom: 1px solid #e0e0e0;
}
.upcoming-due-table tr:hover {
    background-color: #f5f5f5;
}
.due-date {
    color: #cc0000;
    font-weight: bold;
}


.graph-row1 {
    display: flex;
    flex-wrap: wrap;
    gap: 30px;
}
.graph-row1 .graph1 {
    flex: 1 1 calc(50% - 30px);
}
#overallProgressChart {
    /* pick the size you like */
    max-width: 300px;   /* width limit  */
    max-height: 300px;  /* height limit */
    margin: auto;       /* keep it centred */
}
</style>

<div class="graph-row1 two-column">
    <div class="graph1">
        <canvas id="overallProgressChart"></canvas>
    </div>
    <div class="graph1">
        <canvas id="top3StudentsPerCourseChart"></canvas>
    </div>
</div>


<?php

$overall_enrolled = 0;
$overall_completed = 0;
$overall_inprogress = 0;

foreach ($courses as $course) {
    $context = context_course::instance($course->id);
    $students = get_enrolled_users($context, '', 0);

    foreach ($students as $student) {
        // Ensure completion is enabled
        if (!completion_info::is_enabled_for_site()) {
            continue;
        }

        $completion = new completion_info($course);
        if (!$completion->is_enabled()) {
            continue;
        }

        $progress = \core_completion\progress::get_course_progress_percentage($course, $student->id);
        if ($progress === 100) {
            $overall_completed++;
        } elseif ($progress > 0) {
            $overall_inprogress++;
        }
    }

    $overall_enrolled += count($students);
}

// Fallback: avoid divide-by-zero or empty pie chart
if ($overall_completed + $overall_inprogress === 0) {
    $overall_completed = 1;
    $overall_inprogress = 0;
}
?>



<script>
const totalCompleted = <?= $overall_completed ?>;
const totalInProgress = <?= $overall_inprogress ?>;

new Chart(document.getElementById('overallProgressChart'), {
    type: 'pie',
    data: {
        labels: ['Completed', 'In Progress'],
        datasets: [{
            data: [totalCompleted, totalInProgress],
            backgroundColor: ['#4bc0c0', '#ffcd56'],
            borderWidth: 1
        }]
    },
    options: {
        responsive: true,
        plugins: {
            title: {
                display: true,
                text: 'Overall Course Progress'
            }
        }
    }
});
</script>
<?php
$raw_sql = "
    SELECT
        u.id AS userid,
        u.firstname,
        u.lastname,
        gg.finalgrade,
        c.fullname AS coursename,
        c.id AS courseid
    FROM {grade_grades} gg
    JOIN {grade_items} gi ON gi.id = gg.itemid
    JOIN {user} u ON u.id = gg.userid
    JOIN {course} c ON c.id = gi.courseid
    WHERE gg.finalgrade IS NOT NULL
      AND gi.itemtype = 'course'
      AND u.deleted = 0
      AND c.id != 1
    ORDER BY c.id ASC, gg.finalgrade DESC
";

$records = $DB->get_records_sql($raw_sql);

$top3_per_course = [];

// Group and take top 3 per course
foreach ($records as $rec) {
    $cid = $rec->courseid;

    if (!isset($top3_per_course[$cid])) {
        $top3_per_course[$cid] = [
            'coursename' => $rec->coursename,
            'students' => []
        ];
    }

    if (count($top3_per_course[$cid]['students']) < 3) {
        $top3_per_course[$cid]['students'][] = [
            'name' => fullname((object)[
                'firstname' => $rec->firstname,
                'lastname'  => $rec->lastname
            ]),
            'grade' => round($rec->finalgrade, 2)
        ];
    }
}

// Structure for Chart.js
$chart_labels = [];       // Courses
$student1_data = [];      // Top 1
$student2_data = [];      // Top 2
$student3_data = [];      // Top 3
$student1_names = [];
$student2_names = [];
$student3_names = [];

foreach ($top3_per_course as $course) {
    $chart_labels[] = $course['coursename'];

    $s1 = $course['students'][0] ?? ['name' => '', 'grade' => 0];
    $s2 = $course['students'][1] ?? ['name' => '', 'grade' => 0];
    $s3 = $course['students'][2] ?? ['name' => '', 'grade' => 0];

    $student1_data[] = $s1['grade'];
    $student2_data[] = $s2['grade'];
    $student3_data[] = $s3['grade'];

    $student1_names[] = $s1['name'];
    $student2_names[] = $s2['name'];
    $student3_names[] = $s3['name'];
}
?>

<script>
const courseLabels = <?= json_encode($chart_labels) ?>;
const grades1 = <?= json_encode($student1_data) ?>;
const grades2 = <?= json_encode($student2_data) ?>;
const grades3 = <?= json_encode($student3_data) ?>;
const names1 = <?= json_encode($student1_names) ?>;
const names2 = <?= json_encode($student2_names) ?>;
const names3 = <?= json_encode($student3_names) ?>;

new Chart(document.getElementById('top3StudentsPerCourseChart'), {
    type: 'bar',
    data: {
        labels: courseLabels,
        datasets: [
            {
                label: '1st Topper',
                data: grades1,
                backgroundColor: 'rgba(75, 192, 192, 0.6)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            },
            {
                label: '2nd Topper',
                data: grades2,
                backgroundColor: 'rgba(255, 205, 86, 0.6)',
                borderColor: 'rgba(255, 205, 86, 1)',
                borderWidth: 1
            },
            {
                label: '3rd Topper',
                data: grades3,
                backgroundColor: 'rgba(255, 99, 132, 0.6)',
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 1
            }
        ]
    },
    options: {
        responsive: true,
        plugins: {
            tooltip: {
                callbacks: {
                    label: function(context) {
                        const index = context.dataIndex;
                        const datasetIndex = context.datasetIndex;

                        let name = '';
                        if (datasetIndex === 0) name = names1[index];
                        else if (datasetIndex === 1) name = names2[index];
                        else if (datasetIndex === 2) name = names3[index];

                        return `${name}: ${context.parsed.y}`;
                    }
                }
            },
            title: {
                display: true,
                text: 'Top 3 Students per Course (Final Grade)'
            }
        },
        scales: {
            y: {
                beginAtZero: true,
                max: 100,
                title: {
                    display: true,
                    text: 'Grade (%)'
                }
            }
        }
    }
});
</script>
<!-- üìã Table Output -->
<h3>üïí Top 5 Upcoming Activity Due Dates</h3>

<?php if (count($upcoming) > 0): ?>
    <table class="upcoming-due-table">
        <thead>
            <tr>
                <th>Course</th>
                <th>Activity</th>
                <th>Type</th>
                <th>Due Date</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <?php foreach ($upcoming as $item): 
                $link = new moodle_url('/mod/' . $item->modtype . '/view.php', ['id' => $item->cmid]);
            ?>
            <tr>
                <td><?= format_string($item->coursename) ?></td>
                <td><?= format_string($item->modname) ?></td>
                <td><?= ucfirst($item->modtype) ?></td>
                <td class="due-date"><?= date('M d, Y H:i', $item->duetime) ?></td>
                <td><a href="<?= $link ?>" class="btn btn-sm btn-primary" target="_blank">View</a></td>
            </tr>
            <?php endforeach; ?>
        </tbody>
    </table>
<?php else: ?>
    <p>No upcoming due dates found.</p>
<?php endif; ?>
<?php
echo $OUTPUT->footer();
?>